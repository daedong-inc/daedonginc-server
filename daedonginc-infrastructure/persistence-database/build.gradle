buildscript {
    ext {
        queryDslVersion = "5.0.0"
    }
}

plugins {
    id 'com.ewerk.gradle.plugins.querydsl' version '1.0.10'
}

dependencies {
    implementation project(':commons:common-model')

    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'com.mysql:mysql-connector-j'

    implementation "com.querydsl:querydsl-jpa:${queryDslVersion}:jakarta"
    annotationProcessor "com.querydsl:querydsl-apt:${queryDslVersion}:jakarta"

    annotationProcessor("jakarta.persistence:jakarta.persistence-api")
    annotationProcessor("jakarta.annotation:jakarta.annotation-api")
}

def generatedDir = "$buildDir/generated"

querydsl {
    jpa = true
    querydslSourcesDir = "$generatedDir/querydsl"
}

sourceSets {
    main {
        java {
            srcDirs += [generatedDir]
        }
    }
}

compileQuerydsl {
    options.annotationProcessorPath = configurations.querydsl
}
configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    querydsl.extendsFrom compileClasspath
}

bootJar {
    enabled(false)
}
jar {
    enabled(true)
}

tasks.jar {
    // jar task의 의존성을 수정합니다.
    // 이제 jar task는 더 이상 compileJava task에 의존하지 않습니다.
    // 대신, classes task가 완료된 후에만 실행됩니다.
    dependsOn = ['classes']
}

tasks.classes {
    // classes task의 의존성을 수정합니다.
    // 이제 classes task는 더 이상 compileQuerydsl task에 의존하지 않습니다.
    // 대신, compileQuerydsl task가 완료된 후에만 실행됩니다.
    dependsOn = []
}

tasks.compileJava {
    // compileJava task의 의존성을 수정합니다.
    // 이제 compileJava task는 더 이상 compileQuerydsl task에 의존하지 않습니다.
    // 대신, compileQuerydsl task가 완료된 후에만 실행됩니다.
    dependsOn = []
}